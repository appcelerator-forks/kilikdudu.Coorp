'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated by a tool.
'     Runtime Version:4.0.30319.18444
'
'     Changes to this file may cause incorrect behavior and will be lost if
'     the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Option Strict Off
Option Explicit On

Imports System
Imports System.ComponentModel
Imports System.Data
Imports System.Diagnostics
Imports System.Web.Services
Imports System.Web.Services.Protocols
Imports System.Xml.Serialization

'
'This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.18444.
'
Namespace wsEmpresaDevReference
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Web.Services.WebServiceBindingAttribute(Name:="WsEmpresaSoap", [Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class WsEmpresa
        Inherits System.Web.Services.Protocols.SoapHttpClientProtocol
        
        Private ConsultarDescricaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPelaChaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private EmpresaCanceladaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarComPermissaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarPorTarefaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarResponsavelDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarHorasCronogramaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletarOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarTelefoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarTelefonePelaChaveOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirTelefoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarTelefoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletarTelefoneOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarConexaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirConexaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarConexaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletarConexaoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConectarUsuarioNaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesconectarUsuarioDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private LiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletarModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarHistoricoModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private CarregarConfPortalEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultarDadosConfPortalUauPorTokenOperationCompleted As System.Threading.SendOrPostCallback
        
        Private GeraTokenEmpresaPorCodigoOperationCompleted As System.Threading.SendOrPostCallback
        
        Private HabilitarPortalEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DesabilitarPortalEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarConfPortalSupNetOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ExisteConfiguracaoUauWebComHospedagemOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ConsultaLogDiferencaLicencaPorEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private ListarModulosCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private BuscarMenusModuloEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirModuloCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private InserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private AlterarModuloCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletarModuloCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private DeletaTodosModuloCustomizadoDaEmpresaOperationCompleted As System.Threading.SendOrPostCallback
        
        Private useDefaultCredentialsSetExplicitly As Boolean
        
        '''<remarks/>
        Public Sub New()
            MyBase.New
            Me.Url = Global.UAUMobileWebAPI.My.MySettings.Default.UAUMobileWebAPI_wsEmpresaReference_WsEmpresa
            If (Me.IsLocalFileSystemWebService(Me.Url) = true) Then
                Me.UseDefaultCredentials = true
                Me.useDefaultCredentialsSetExplicitly = false
            Else
                Me.useDefaultCredentialsSetExplicitly = true
            End If
        End Sub
        
        Public Shadows Property Url() As String
            Get
                Return MyBase.Url
            End Get
            Set
                If (((Me.IsLocalFileSystemWebService(MyBase.Url) = true)  _
                            AndAlso (Me.useDefaultCredentialsSetExplicitly = false))  _
                            AndAlso (Me.IsLocalFileSystemWebService(value) = false)) Then
                    MyBase.UseDefaultCredentials = false
                End If
                MyBase.Url = value
            End Set
        End Property
        
        Public Shadows Property UseDefaultCredentials() As Boolean
            Get
                Return MyBase.UseDefaultCredentials
            End Get
            Set
                MyBase.UseDefaultCredentials = value
                Me.useDefaultCredentialsSetExplicitly = true
            End Set
        End Property
        
        '''<remarks/>
        Public Event ConsultarDescricaoCompleted As ConsultarDescricaoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPelaChaveCompleted As ConsultarPelaChaveCompletedEventHandler
        
        '''<remarks/>
        Public Event EmpresaCanceladaCompleted As EmpresaCanceladaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarCompleted As ConsultarCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarComPermissaoCompleted As ConsultarComPermissaoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarPorTarefaCompleted As ConsultarPorTarefaCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirCompleted As InserirCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarCompleted As AlterarCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarResponsavelDaEmpresaCompleted As AlterarResponsavelDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarHorasCronogramaCompleted As AlterarHorasCronogramaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletarCompleted As DeletarCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarTelefoneCompleted As ListarTelefoneCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarTelefonePelaChaveCompleted As ListarTelefonePelaChaveCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirTelefoneCompleted As InserirTelefoneCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarTelefoneCompleted As AlterarTelefoneCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletarTelefoneCompleted As DeletarTelefoneCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarConexaoCompleted As ListarConexaoCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirConexaoCompleted As InserirConexaoCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarConexaoCompleted As AlterarConexaoCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletarConexaoCompleted As DeletarConexaoCompletedEventHandler
        
        '''<remarks/>
        Public Event ConectarUsuarioNaEmpresaCompleted As ConectarUsuarioNaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event DesconectarUsuarioDaEmpresaCompleted As DesconectarUsuarioDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event LiberarConexoesDasEmpresasAposUmDiaDeUsoCompleted As LiberarConexoesDasEmpresasAposUmDiaDeUsoCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarModuloEmpresaCompleted As ListarModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirModuloEmpresaCompleted As InserirModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletarModuloEmpresaCompleted As DeletarModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarModuloEmpresaCompleted As AlterarModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarHistoricoModuloEmpresaCompleted As ConsultarHistoricoModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarModuloEmpresaPorModuloEEmpresaCompleted As ConsultarModuloEmpresaPorModuloEEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event CarregarConfPortalEmpresaCompleted As CarregarConfPortalEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultarDadosConfPortalUauPorTokenCompleted As ConsultarDadosConfPortalUauPorTokenCompletedEventHandler
        
        '''<remarks/>
        Public Event GeraTokenEmpresaPorCodigoCompleted As GeraTokenEmpresaPorCodigoCompletedEventHandler
        
        '''<remarks/>
        Public Event HabilitarPortalEmpresaCompleted As HabilitarPortalEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event DesabilitarPortalEmpresaCompleted As DesabilitarPortalEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarConfPortalSupNetCompleted As AlterarConfPortalSupNetCompletedEventHandler
        
        '''<remarks/>
        Public Event ExisteConfiguracaoUauWebComHospedagemCompleted As ExisteConfiguracaoUauWebComHospedagemCompletedEventHandler
        
        '''<remarks/>
        Public Event ConsultaLogDiferencaLicencaPorEmpresaCompleted As ConsultaLogDiferencaLicencaPorEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event ListarModulosCustomizadoDaEmpresaCompleted As ListarModulosCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event BuscarMenusModuloEmpresaCompleted As BuscarMenusModuloEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirModuloCustomizadoDaEmpresaCompleted As InserirModuloCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event InserirPermissoesModuloCustomizadoDaEmpresaCompleted As InserirPermissoesModuloCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event AlterarModuloCustomizadoDaEmpresaCompleted As AlterarModuloCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletarModuloCustomizadoDaEmpresaCompleted As DeletarModuloCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        Public Event DeletaTodosModuloCustomizadoDaEmpresaCompleted As DeletaTodosModuloCustomizadoDaEmpresaCompletedEventHandler
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarDescricao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDescricao(ByVal Num_emp As Integer) As String
            Dim results() As Object = Me.Invoke("ConsultarDescricao", New Object() {Num_emp})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDescricaoAsync(ByVal Num_emp As Integer)
            Me.ConsultarDescricaoAsync(Num_emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDescricaoAsync(ByVal Num_emp As Integer, ByVal userState As Object)
            If (Me.ConsultarDescricaoOperationCompleted Is Nothing) Then
                Me.ConsultarDescricaoOperationCompleted = AddressOf Me.OnConsultarDescricaoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDescricao", New Object() {Num_emp}, Me.ConsultarDescricaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDescricaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDescricaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDescricaoCompleted(Me, New ConsultarDescricaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarPelaChave", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPelaChave(ByVal Num_emp As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPelaChave", New Object() {Num_emp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPelaChaveAsync(ByVal Num_emp As Integer)
            Me.ConsultarPelaChaveAsync(Num_emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPelaChaveAsync(ByVal Num_emp As Integer, ByVal userState As Object)
            If (Me.ConsultarPelaChaveOperationCompleted Is Nothing) Then
                Me.ConsultarPelaChaveOperationCompleted = AddressOf Me.OnConsultarPelaChaveOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPelaChave", New Object() {Num_emp}, Me.ConsultarPelaChaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPelaChaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPelaChaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPelaChaveCompleted(Me, New ConsultarPelaChaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/EmpresaCancelada", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function EmpresaCancelada(ByVal numeroEmpresa As Integer) As Boolean
            Dim results() As Object = Me.Invoke("EmpresaCancelada", New Object() {numeroEmpresa})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub EmpresaCanceladaAsync(ByVal numeroEmpresa As Integer)
            Me.EmpresaCanceladaAsync(numeroEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub EmpresaCanceladaAsync(ByVal numeroEmpresa As Integer, ByVal userState As Object)
            If (Me.EmpresaCanceladaOperationCompleted Is Nothing) Then
                Me.EmpresaCanceladaOperationCompleted = AddressOf Me.OnEmpresaCanceladaOperationCompleted
            End If
            Me.InvokeAsync("EmpresaCancelada", New Object() {numeroEmpresa}, Me.EmpresaCanceladaOperationCompleted, userState)
        End Sub
        
        Private Sub OnEmpresaCanceladaOperationCompleted(ByVal arg As Object)
            If (Not (Me.EmpresaCanceladaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent EmpresaCanceladaCompleted(Me, New EmpresaCanceladaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/Consultar", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Consultar(ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("Consultar", New Object() {RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsync(ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean)
            Me.ConsultarAsync(RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarAsync(ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean, ByVal userState As Object)
            If (Me.ConsultarOperationCompleted Is Nothing) Then
                Me.ConsultarOperationCompleted = AddressOf Me.OnConsultarOperationCompleted
            End If
            Me.InvokeAsync("Consultar", New Object() {RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos}, Me.ConsultarOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarCompleted(Me, New ConsultarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarComPermissao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarComPermissao(ByVal Programa As String, ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarComPermissao", New Object() {Programa, RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarComPermissaoAsync(ByVal Programa As String, ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean)
            Me.ConsultarComPermissaoAsync(Programa, RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarComPermissaoAsync(ByVal Programa As String, ByVal RetornarAtivos As Boolean, ByVal RetornarInativos As Boolean, ByVal RetornarClientes As Boolean, ByVal RetornarContatos As Boolean, ByVal userState As Object)
            If (Me.ConsultarComPermissaoOperationCompleted Is Nothing) Then
                Me.ConsultarComPermissaoOperationCompleted = AddressOf Me.OnConsultarComPermissaoOperationCompleted
            End If
            Me.InvokeAsync("ConsultarComPermissao", New Object() {Programa, RetornarAtivos, RetornarInativos, RetornarClientes, RetornarContatos}, Me.ConsultarComPermissaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarComPermissaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarComPermissaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarComPermissaoCompleted(Me, New ConsultarComPermissaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarPorTarefa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarPorTarefa(ByVal Num_Tar As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarPorTarefa", New Object() {Num_Tar})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarPorTarefaAsync(ByVal Num_Tar As Integer)
            Me.ConsultarPorTarefaAsync(Num_Tar, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarPorTarefaAsync(ByVal Num_Tar As Integer, ByVal userState As Object)
            If (Me.ConsultarPorTarefaOperationCompleted Is Nothing) Then
                Me.ConsultarPorTarefaOperationCompleted = AddressOf Me.OnConsultarPorTarefaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarPorTarefa", New Object() {Num_Tar}, Me.ConsultarPorTarefaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarPorTarefaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarPorTarefaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarPorTarefaCompleted(Me, New ConsultarPorTarefaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/Inserir", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Inserir(ByVal objInfo As _EmpresaInfo) As Integer
            Dim results() As Object = Me.Invoke("Inserir", New Object() {objInfo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InserirAsync(ByVal objInfo As _EmpresaInfo)
            Me.InserirAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirAsync(ByVal objInfo As _EmpresaInfo, ByVal userState As Object)
            If (Me.InserirOperationCompleted Is Nothing) Then
                Me.InserirOperationCompleted = AddressOf Me.OnInserirOperationCompleted
            End If
            Me.InvokeAsync("Inserir", New Object() {objInfo}, Me.InserirOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirCompleted(Me, New InserirCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/Alterar", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub Alterar(ByVal ObjInfo As _EmpresaInfo)
            Me.Invoke("Alterar", New Object() {ObjInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarAsync(ByVal ObjInfo As _EmpresaInfo)
            Me.AlterarAsync(ObjInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarAsync(ByVal ObjInfo As _EmpresaInfo, ByVal userState As Object)
            If (Me.AlterarOperationCompleted Is Nothing) Then
                Me.AlterarOperationCompleted = AddressOf Me.OnAlterarOperationCompleted
            End If
            Me.InvokeAsync("Alterar", New Object() {ObjInfo}, Me.AlterarOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarResponsavelDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarResponsavelDaEmpresa(ByVal infoEmpresa As _EmpresaInfo)
            Me.Invoke("AlterarResponsavelDaEmpresa", New Object() {infoEmpresa})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarResponsavelDaEmpresaAsync(ByVal infoEmpresa As _EmpresaInfo)
            Me.AlterarResponsavelDaEmpresaAsync(infoEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarResponsavelDaEmpresaAsync(ByVal infoEmpresa As _EmpresaInfo, ByVal userState As Object)
            If (Me.AlterarResponsavelDaEmpresaOperationCompleted Is Nothing) Then
                Me.AlterarResponsavelDaEmpresaOperationCompleted = AddressOf Me.OnAlterarResponsavelDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("AlterarResponsavelDaEmpresa", New Object() {infoEmpresa}, Me.AlterarResponsavelDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarResponsavelDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarResponsavelDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarResponsavelDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarHorasCronograma", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarHorasCronograma(ByVal infoEmpresa As _EmpresaInfo)
            Me.Invoke("AlterarHorasCronograma", New Object() {infoEmpresa})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarHorasCronogramaAsync(ByVal infoEmpresa As _EmpresaInfo)
            Me.AlterarHorasCronogramaAsync(infoEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarHorasCronogramaAsync(ByVal infoEmpresa As _EmpresaInfo, ByVal userState As Object)
            If (Me.AlterarHorasCronogramaOperationCompleted Is Nothing) Then
                Me.AlterarHorasCronogramaOperationCompleted = AddressOf Me.OnAlterarHorasCronogramaOperationCompleted
            End If
            Me.InvokeAsync("AlterarHorasCronograma", New Object() {infoEmpresa}, Me.AlterarHorasCronogramaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarHorasCronogramaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarHorasCronogramaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarHorasCronogramaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/Deletar", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function Deletar(ByVal Num_emp As Integer) As Boolean
            Dim results() As Object = Me.Invoke("Deletar", New Object() {Num_emp})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletarAsync(ByVal Num_emp As Integer)
            Me.DeletarAsync(Num_emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarAsync(ByVal Num_emp As Integer, ByVal userState As Object)
            If (Me.DeletarOperationCompleted Is Nothing) Then
                Me.DeletarOperationCompleted = AddressOf Me.OnDeletarOperationCompleted
            End If
            Me.InvokeAsync("Deletar", New Object() {Num_emp}, Me.DeletarOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletarOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletarCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletarCompleted(Me, New DeletarCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ListarTelefone", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarTelefone(ByVal NumEmp_tel As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarTelefone", New Object() {NumEmp_tel})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarTelefoneAsync(ByVal NumEmp_tel As Integer)
            Me.ListarTelefoneAsync(NumEmp_tel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarTelefoneAsync(ByVal NumEmp_tel As Integer, ByVal userState As Object)
            If (Me.ListarTelefoneOperationCompleted Is Nothing) Then
                Me.ListarTelefoneOperationCompleted = AddressOf Me.OnListarTelefoneOperationCompleted
            End If
            Me.InvokeAsync("ListarTelefone", New Object() {NumEmp_tel}, Me.ListarTelefoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarTelefoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarTelefoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarTelefoneCompleted(Me, New ListarTelefoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ListarTelefonePelaChave", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarTelefonePelaChave(ByVal Num_tel As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarTelefonePelaChave", New Object() {Num_tel})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarTelefonePelaChaveAsync(ByVal Num_tel As Integer)
            Me.ListarTelefonePelaChaveAsync(Num_tel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarTelefonePelaChaveAsync(ByVal Num_tel As Integer, ByVal userState As Object)
            If (Me.ListarTelefonePelaChaveOperationCompleted Is Nothing) Then
                Me.ListarTelefonePelaChaveOperationCompleted = AddressOf Me.OnListarTelefonePelaChaveOperationCompleted
            End If
            Me.InvokeAsync("ListarTelefonePelaChave", New Object() {Num_tel}, Me.ListarTelefonePelaChaveOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarTelefonePelaChaveOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarTelefonePelaChaveCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarTelefonePelaChaveCompleted(Me, New ListarTelefonePelaChaveCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/InserirTelefone", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InserirTelefone(ByVal objInfo As _TelefoneEmpInfo) As Object
            Dim results() As Object = Me.Invoke("InserirTelefone", New Object() {objInfo})
            Return CType(results(0),Object)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InserirTelefoneAsync(ByVal objInfo As _TelefoneEmpInfo)
            Me.InserirTelefoneAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirTelefoneAsync(ByVal objInfo As _TelefoneEmpInfo, ByVal userState As Object)
            If (Me.InserirTelefoneOperationCompleted Is Nothing) Then
                Me.InserirTelefoneOperationCompleted = AddressOf Me.OnInserirTelefoneOperationCompleted
            End If
            Me.InvokeAsync("InserirTelefone", New Object() {objInfo}, Me.InserirTelefoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirTelefoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirTelefoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirTelefoneCompleted(Me, New InserirTelefoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarTelefone", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarTelefone(ByVal ObjInfo As _TelefoneEmpInfo)
            Me.Invoke("AlterarTelefone", New Object() {ObjInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarTelefoneAsync(ByVal ObjInfo As _TelefoneEmpInfo)
            Me.AlterarTelefoneAsync(ObjInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarTelefoneAsync(ByVal ObjInfo As _TelefoneEmpInfo, ByVal userState As Object)
            If (Me.AlterarTelefoneOperationCompleted Is Nothing) Then
                Me.AlterarTelefoneOperationCompleted = AddressOf Me.OnAlterarTelefoneOperationCompleted
            End If
            Me.InvokeAsync("AlterarTelefone", New Object() {ObjInfo}, Me.AlterarTelefoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarTelefoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarTelefoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarTelefoneCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DeletarTelefone", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletarTelefone(ByVal Num_tel As Integer) As Boolean
            Dim results() As Object = Me.Invoke("DeletarTelefone", New Object() {Num_tel})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletarTelefoneAsync(ByVal Num_tel As Integer)
            Me.DeletarTelefoneAsync(Num_tel, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarTelefoneAsync(ByVal Num_tel As Integer, ByVal userState As Object)
            If (Me.DeletarTelefoneOperationCompleted Is Nothing) Then
                Me.DeletarTelefoneOperationCompleted = AddressOf Me.OnDeletarTelefoneOperationCompleted
            End If
            Me.InvokeAsync("DeletarTelefone", New Object() {Num_tel}, Me.DeletarTelefoneOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletarTelefoneOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletarTelefoneCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletarTelefoneCompleted(Me, New DeletarTelefoneCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ListarConexao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarConexao(ByVal NumEmp_con As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarConexao", New Object() {NumEmp_con})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarConexaoAsync(ByVal NumEmp_con As Integer)
            Me.ListarConexaoAsync(NumEmp_con, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarConexaoAsync(ByVal NumEmp_con As Integer, ByVal userState As Object)
            If (Me.ListarConexaoOperationCompleted Is Nothing) Then
                Me.ListarConexaoOperationCompleted = AddressOf Me.OnListarConexaoOperationCompleted
            End If
            Me.InvokeAsync("ListarConexao", New Object() {NumEmp_con}, Me.ListarConexaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarConexaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarConexaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarConexaoCompleted(Me, New ListarConexaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/InserirConexao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function InserirConexao(ByVal objInfo As _ConexaoEmpInfo) As Integer
            Dim results() As Object = Me.Invoke("InserirConexao", New Object() {objInfo})
            Return CType(results(0),Integer)
        End Function
        
        '''<remarks/>
        Public Overloads Sub InserirConexaoAsync(ByVal objInfo As _ConexaoEmpInfo)
            Me.InserirConexaoAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirConexaoAsync(ByVal objInfo As _ConexaoEmpInfo, ByVal userState As Object)
            If (Me.InserirConexaoOperationCompleted Is Nothing) Then
                Me.InserirConexaoOperationCompleted = AddressOf Me.OnInserirConexaoOperationCompleted
            End If
            Me.InvokeAsync("InserirConexao", New Object() {objInfo}, Me.InserirConexaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirConexaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirConexaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirConexaoCompleted(Me, New InserirConexaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarConexao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarConexao(ByVal ObjInfo As _ConexaoEmpInfo)
            Me.Invoke("AlterarConexao", New Object() {ObjInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarConexaoAsync(ByVal ObjInfo As _ConexaoEmpInfo)
            Me.AlterarConexaoAsync(ObjInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarConexaoAsync(ByVal ObjInfo As _ConexaoEmpInfo, ByVal userState As Object)
            If (Me.AlterarConexaoOperationCompleted Is Nothing) Then
                Me.AlterarConexaoOperationCompleted = AddressOf Me.OnAlterarConexaoOperationCompleted
            End If
            Me.InvokeAsync("AlterarConexao", New Object() {ObjInfo}, Me.AlterarConexaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarConexaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarConexaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarConexaoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DeletarConexao", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletarConexao(ByVal Num_con As String) As Boolean
            Dim results() As Object = Me.Invoke("DeletarConexao", New Object() {Num_con})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletarConexaoAsync(ByVal Num_con As String)
            Me.DeletarConexaoAsync(Num_con, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarConexaoAsync(ByVal Num_con As String, ByVal userState As Object)
            If (Me.DeletarConexaoOperationCompleted Is Nothing) Then
                Me.DeletarConexaoOperationCompleted = AddressOf Me.OnDeletarConexaoOperationCompleted
            End If
            Me.InvokeAsync("DeletarConexao", New Object() {Num_con}, Me.DeletarConexaoOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletarConexaoOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletarConexaoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletarConexaoCompleted(Me, New DeletarConexaoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConectarUsuarioNaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub ConectarUsuarioNaEmpresa(ByVal numeroConexao As Integer, ByVal usuario As String)
            Me.Invoke("ConectarUsuarioNaEmpresa", New Object() {numeroConexao, usuario})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConectarUsuarioNaEmpresaAsync(ByVal numeroConexao As Integer, ByVal usuario As String)
            Me.ConectarUsuarioNaEmpresaAsync(numeroConexao, usuario, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConectarUsuarioNaEmpresaAsync(ByVal numeroConexao As Integer, ByVal usuario As String, ByVal userState As Object)
            If (Me.ConectarUsuarioNaEmpresaOperationCompleted Is Nothing) Then
                Me.ConectarUsuarioNaEmpresaOperationCompleted = AddressOf Me.OnConectarUsuarioNaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ConectarUsuarioNaEmpresa", New Object() {numeroConexao, usuario}, Me.ConectarUsuarioNaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConectarUsuarioNaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConectarUsuarioNaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConectarUsuarioNaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DesconectarUsuarioDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DesconectarUsuarioDaEmpresa(ByVal numeroConexao As Integer)
            Me.Invoke("DesconectarUsuarioDaEmpresa", New Object() {numeroConexao})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesconectarUsuarioDaEmpresaAsync(ByVal numeroConexao As Integer)
            Me.DesconectarUsuarioDaEmpresaAsync(numeroConexao, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesconectarUsuarioDaEmpresaAsync(ByVal numeroConexao As Integer, ByVal userState As Object)
            If (Me.DesconectarUsuarioDaEmpresaOperationCompleted Is Nothing) Then
                Me.DesconectarUsuarioDaEmpresaOperationCompleted = AddressOf Me.OnDesconectarUsuarioDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("DesconectarUsuarioDaEmpresa", New Object() {numeroConexao}, Me.DesconectarUsuarioDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesconectarUsuarioDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesconectarUsuarioDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesconectarUsuarioDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/LiberarConexoesDasEmpresasAposUmDiaDeU"& _ 
            "so", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub LiberarConexoesDasEmpresasAposUmDiaDeUso()
            Me.Invoke("LiberarConexoesDasEmpresasAposUmDiaDeUso", New Object(-1) {})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LiberarConexoesDasEmpresasAposUmDiaDeUsoAsync()
            Me.LiberarConexoesDasEmpresasAposUmDiaDeUsoAsync(Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub LiberarConexoesDasEmpresasAposUmDiaDeUsoAsync(ByVal userState As Object)
            If (Me.LiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted Is Nothing) Then
                Me.LiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted = AddressOf Me.OnLiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted
            End If
            Me.InvokeAsync("LiberarConexoesDasEmpresasAposUmDiaDeUso", New Object(-1) {}, Me.LiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted, userState)
        End Sub
        
        Private Sub OnLiberarConexoesDasEmpresasAposUmDiaDeUsoOperationCompleted(ByVal arg As Object)
            If (Not (Me.LiberarConexoesDasEmpresasAposUmDiaDeUsoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent LiberarConexoesDasEmpresasAposUmDiaDeUsoCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ListarModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarModuloEmpresa(ByVal Num_Emp As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarModuloEmpresa", New Object() {Num_Emp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarModuloEmpresaAsync(ByVal Num_Emp As Integer)
            Me.ListarModuloEmpresaAsync(Num_Emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarModuloEmpresaAsync(ByVal Num_Emp As Integer, ByVal userState As Object)
            If (Me.ListarModuloEmpresaOperationCompleted Is Nothing) Then
                Me.ListarModuloEmpresaOperationCompleted = AddressOf Me.OnListarModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ListarModuloEmpresa", New Object() {Num_Emp}, Me.ListarModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarModuloEmpresaCompleted(Me, New ListarModuloEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/InserirModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InserirModuloEmpresa(ByVal objInfo As _ModuloEmpresaInfo)
            Me.Invoke("InserirModuloEmpresa", New Object() {objInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirModuloEmpresaAsync(ByVal objInfo As _ModuloEmpresaInfo)
            Me.InserirModuloEmpresaAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirModuloEmpresaAsync(ByVal objInfo As _ModuloEmpresaInfo, ByVal userState As Object)
            If (Me.InserirModuloEmpresaOperationCompleted Is Nothing) Then
                Me.InserirModuloEmpresaOperationCompleted = AddressOf Me.OnInserirModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("InserirModuloEmpresa", New Object() {objInfo}, Me.InserirModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirModuloEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DeletarModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function DeletarModuloEmpresa(ByVal NumEmp_ModEmp As String, ByVal NumMod_ModEmp As Byte) As Boolean
            Dim results() As Object = Me.Invoke("DeletarModuloEmpresa", New Object() {NumEmp_ModEmp, NumMod_ModEmp})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub DeletarModuloEmpresaAsync(ByVal NumEmp_ModEmp As String, ByVal NumMod_ModEmp As Byte)
            Me.DeletarModuloEmpresaAsync(NumEmp_ModEmp, NumMod_ModEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarModuloEmpresaAsync(ByVal NumEmp_ModEmp As String, ByVal NumMod_ModEmp As Byte, ByVal userState As Object)
            If (Me.DeletarModuloEmpresaOperationCompleted Is Nothing) Then
                Me.DeletarModuloEmpresaOperationCompleted = AddressOf Me.OnDeletarModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("DeletarModuloEmpresa", New Object() {NumEmp_ModEmp, NumMod_ModEmp}, Me.DeletarModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletarModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletarModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletarModuloEmpresaCompleted(Me, New DeletarModuloEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarModuloEmpresa(ByVal modEmpInfo As _ModuloEmpresaInfo)
            Me.Invoke("AlterarModuloEmpresa", New Object() {modEmpInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarModuloEmpresaAsync(ByVal modEmpInfo As _ModuloEmpresaInfo)
            Me.AlterarModuloEmpresaAsync(modEmpInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarModuloEmpresaAsync(ByVal modEmpInfo As _ModuloEmpresaInfo, ByVal userState As Object)
            If (Me.AlterarModuloEmpresaOperationCompleted Is Nothing) Then
                Me.AlterarModuloEmpresaOperationCompleted = AddressOf Me.OnAlterarModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("AlterarModuloEmpresa", New Object() {modEmpInfo}, Me.AlterarModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarModuloEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarHistoricoModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarHistoricoModuloEmpresa(ByVal numeroEmpresa As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultarHistoricoModuloEmpresa", New Object() {numeroEmpresa})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarHistoricoModuloEmpresaAsync(ByVal numeroEmpresa As Integer)
            Me.ConsultarHistoricoModuloEmpresaAsync(numeroEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarHistoricoModuloEmpresaAsync(ByVal numeroEmpresa As Integer, ByVal userState As Object)
            If (Me.ConsultarHistoricoModuloEmpresaOperationCompleted Is Nothing) Then
                Me.ConsultarHistoricoModuloEmpresaOperationCompleted = AddressOf Me.OnConsultarHistoricoModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarHistoricoModuloEmpresa", New Object() {numeroEmpresa}, Me.ConsultarHistoricoModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarHistoricoModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarHistoricoModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarHistoricoModuloEmpresaCompleted(Me, New ConsultarHistoricoModuloEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarModuloEmpresaPorModuloEEmpres"& _ 
            "a", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarModuloEmpresaPorModuloEEmpresa(ByVal numeroEmpresa As String, ByVal numeroModulo As Byte) As _ModuloEmpresaInfo
            Dim results() As Object = Me.Invoke("ConsultarModuloEmpresaPorModuloEEmpresa", New Object() {numeroEmpresa, numeroModulo})
            Return CType(results(0),_ModuloEmpresaInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarModuloEmpresaPorModuloEEmpresaAsync(ByVal numeroEmpresa As String, ByVal numeroModulo As Byte)
            Me.ConsultarModuloEmpresaPorModuloEEmpresaAsync(numeroEmpresa, numeroModulo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarModuloEmpresaPorModuloEEmpresaAsync(ByVal numeroEmpresa As String, ByVal numeroModulo As Byte, ByVal userState As Object)
            If (Me.ConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted Is Nothing) Then
                Me.ConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted = AddressOf Me.OnConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ConsultarModuloEmpresaPorModuloEEmpresa", New Object() {numeroEmpresa, numeroModulo}, Me.ConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarModuloEmpresaPorModuloEEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarModuloEmpresaPorModuloEEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarModuloEmpresaPorModuloEEmpresaCompleted(Me, New ConsultarModuloEmpresaPorModuloEEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/CarregarConfPortalEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function CarregarConfPortalEmpresa(ByVal NumEmp_PWeb As Integer) As _ConfPortalUAUInfo
            Dim results() As Object = Me.Invoke("CarregarConfPortalEmpresa", New Object() {NumEmp_PWeb})
            Return CType(results(0),_ConfPortalUAUInfo)
        End Function
        
        '''<remarks/>
        Public Overloads Sub CarregarConfPortalEmpresaAsync(ByVal NumEmp_PWeb As Integer)
            Me.CarregarConfPortalEmpresaAsync(NumEmp_PWeb, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub CarregarConfPortalEmpresaAsync(ByVal NumEmp_PWeb As Integer, ByVal userState As Object)
            If (Me.CarregarConfPortalEmpresaOperationCompleted Is Nothing) Then
                Me.CarregarConfPortalEmpresaOperationCompleted = AddressOf Me.OnCarregarConfPortalEmpresaOperationCompleted
            End If
            Me.InvokeAsync("CarregarConfPortalEmpresa", New Object() {NumEmp_PWeb}, Me.CarregarConfPortalEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnCarregarConfPortalEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.CarregarConfPortalEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent CarregarConfPortalEmpresaCompleted(Me, New CarregarConfPortalEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultarDadosConfPortalUauPorToken", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultarDadosConfPortalUauPorToken(ByVal token As String) As String
            Dim results() As Object = Me.Invoke("ConsultarDadosConfPortalUauPorToken", New Object() {token})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultarDadosConfPortalUauPorTokenAsync(ByVal token As String)
            Me.ConsultarDadosConfPortalUauPorTokenAsync(token, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultarDadosConfPortalUauPorTokenAsync(ByVal token As String, ByVal userState As Object)
            If (Me.ConsultarDadosConfPortalUauPorTokenOperationCompleted Is Nothing) Then
                Me.ConsultarDadosConfPortalUauPorTokenOperationCompleted = AddressOf Me.OnConsultarDadosConfPortalUauPorTokenOperationCompleted
            End If
            Me.InvokeAsync("ConsultarDadosConfPortalUauPorToken", New Object() {token}, Me.ConsultarDadosConfPortalUauPorTokenOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultarDadosConfPortalUauPorTokenOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultarDadosConfPortalUauPorTokenCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultarDadosConfPortalUauPorTokenCompleted(Me, New ConsultarDadosConfPortalUauPorTokenCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/GeraTokenEmpresaPorCodigo", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function GeraTokenEmpresaPorCodigo(ByVal codEmpresa As Integer) As String
            Dim results() As Object = Me.Invoke("GeraTokenEmpresaPorCodigo", New Object() {codEmpresa})
            Return CType(results(0),String)
        End Function
        
        '''<remarks/>
        Public Overloads Sub GeraTokenEmpresaPorCodigoAsync(ByVal codEmpresa As Integer)
            Me.GeraTokenEmpresaPorCodigoAsync(codEmpresa, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub GeraTokenEmpresaPorCodigoAsync(ByVal codEmpresa As Integer, ByVal userState As Object)
            If (Me.GeraTokenEmpresaPorCodigoOperationCompleted Is Nothing) Then
                Me.GeraTokenEmpresaPorCodigoOperationCompleted = AddressOf Me.OnGeraTokenEmpresaPorCodigoOperationCompleted
            End If
            Me.InvokeAsync("GeraTokenEmpresaPorCodigo", New Object() {codEmpresa}, Me.GeraTokenEmpresaPorCodigoOperationCompleted, userState)
        End Sub
        
        Private Sub OnGeraTokenEmpresaPorCodigoOperationCompleted(ByVal arg As Object)
            If (Not (Me.GeraTokenEmpresaPorCodigoCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent GeraTokenEmpresaPorCodigoCompleted(Me, New GeraTokenEmpresaPorCodigoCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/HabilitarPortalEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub HabilitarPortalEmpresa(ByVal objInfo As _ConfPortalUAUInfo)
            Me.Invoke("HabilitarPortalEmpresa", New Object() {objInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HabilitarPortalEmpresaAsync(ByVal objInfo As _ConfPortalUAUInfo)
            Me.HabilitarPortalEmpresaAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub HabilitarPortalEmpresaAsync(ByVal objInfo As _ConfPortalUAUInfo, ByVal userState As Object)
            If (Me.HabilitarPortalEmpresaOperationCompleted Is Nothing) Then
                Me.HabilitarPortalEmpresaOperationCompleted = AddressOf Me.OnHabilitarPortalEmpresaOperationCompleted
            End If
            Me.InvokeAsync("HabilitarPortalEmpresa", New Object() {objInfo}, Me.HabilitarPortalEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnHabilitarPortalEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.HabilitarPortalEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent HabilitarPortalEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DesabilitarPortalEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DesabilitarPortalEmpresa(ByVal NumEmp As Integer)
            Me.Invoke("DesabilitarPortalEmpresa", New Object() {NumEmp})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesabilitarPortalEmpresaAsync(ByVal NumEmp As Integer)
            Me.DesabilitarPortalEmpresaAsync(NumEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DesabilitarPortalEmpresaAsync(ByVal NumEmp As Integer, ByVal userState As Object)
            If (Me.DesabilitarPortalEmpresaOperationCompleted Is Nothing) Then
                Me.DesabilitarPortalEmpresaOperationCompleted = AddressOf Me.OnDesabilitarPortalEmpresaOperationCompleted
            End If
            Me.InvokeAsync("DesabilitarPortalEmpresa", New Object() {NumEmp}, Me.DesabilitarPortalEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDesabilitarPortalEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DesabilitarPortalEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DesabilitarPortalEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarConfPortalSupNet", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarConfPortalSupNet(ByVal ConfPortaluauInfo As _ConfPortalUAUInfo)
            Me.Invoke("AlterarConfPortalSupNet", New Object() {ConfPortaluauInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarConfPortalSupNetAsync(ByVal ConfPortaluauInfo As _ConfPortalUAUInfo)
            Me.AlterarConfPortalSupNetAsync(ConfPortaluauInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarConfPortalSupNetAsync(ByVal ConfPortaluauInfo As _ConfPortalUAUInfo, ByVal userState As Object)
            If (Me.AlterarConfPortalSupNetOperationCompleted Is Nothing) Then
                Me.AlterarConfPortalSupNetOperationCompleted = AddressOf Me.OnAlterarConfPortalSupNetOperationCompleted
            End If
            Me.InvokeAsync("AlterarConfPortalSupNet", New Object() {ConfPortaluauInfo}, Me.AlterarConfPortalSupNetOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarConfPortalSupNetOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarConfPortalSupNetCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarConfPortalSupNetCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ExisteConfiguracaoUauWebComHospedagem", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ExisteConfiguracaoUauWebComHospedagem(ByVal Num_hosp As Integer) As Boolean
            Dim results() As Object = Me.Invoke("ExisteConfiguracaoUauWebComHospedagem", New Object() {Num_hosp})
            Return CType(results(0),Boolean)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ExisteConfiguracaoUauWebComHospedagemAsync(ByVal Num_hosp As Integer)
            Me.ExisteConfiguracaoUauWebComHospedagemAsync(Num_hosp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ExisteConfiguracaoUauWebComHospedagemAsync(ByVal Num_hosp As Integer, ByVal userState As Object)
            If (Me.ExisteConfiguracaoUauWebComHospedagemOperationCompleted Is Nothing) Then
                Me.ExisteConfiguracaoUauWebComHospedagemOperationCompleted = AddressOf Me.OnExisteConfiguracaoUauWebComHospedagemOperationCompleted
            End If
            Me.InvokeAsync("ExisteConfiguracaoUauWebComHospedagem", New Object() {Num_hosp}, Me.ExisteConfiguracaoUauWebComHospedagemOperationCompleted, userState)
        End Sub
        
        Private Sub OnExisteConfiguracaoUauWebComHospedagemOperationCompleted(ByVal arg As Object)
            If (Not (Me.ExisteConfiguracaoUauWebComHospedagemCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ExisteConfiguracaoUauWebComHospedagemCompleted(Me, New ExisteConfiguracaoUauWebComHospedagemCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ConsultaLogDiferencaLicencaPorEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ConsultaLogDiferencaLicencaPorEmpresa(ByVal intNumEmp As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ConsultaLogDiferencaLicencaPorEmpresa", New Object() {intNumEmp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ConsultaLogDiferencaLicencaPorEmpresaAsync(ByVal intNumEmp As Integer)
            Me.ConsultaLogDiferencaLicencaPorEmpresaAsync(intNumEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ConsultaLogDiferencaLicencaPorEmpresaAsync(ByVal intNumEmp As Integer, ByVal userState As Object)
            If (Me.ConsultaLogDiferencaLicencaPorEmpresaOperationCompleted Is Nothing) Then
                Me.ConsultaLogDiferencaLicencaPorEmpresaOperationCompleted = AddressOf Me.OnConsultaLogDiferencaLicencaPorEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ConsultaLogDiferencaLicencaPorEmpresa", New Object() {intNumEmp}, Me.ConsultaLogDiferencaLicencaPorEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnConsultaLogDiferencaLicencaPorEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ConsultaLogDiferencaLicencaPorEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ConsultaLogDiferencaLicencaPorEmpresaCompleted(Me, New ConsultaLogDiferencaLicencaPorEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/ListarModulosCustomizadoDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function ListarModulosCustomizadoDaEmpresa(ByVal Num_Emp As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("ListarModulosCustomizadoDaEmpresa", New Object() {Num_Emp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub ListarModulosCustomizadoDaEmpresaAsync(ByVal Num_Emp As Integer)
            Me.ListarModulosCustomizadoDaEmpresaAsync(Num_Emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub ListarModulosCustomizadoDaEmpresaAsync(ByVal Num_Emp As Integer, ByVal userState As Object)
            If (Me.ListarModulosCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.ListarModulosCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnListarModulosCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("ListarModulosCustomizadoDaEmpresa", New Object() {Num_Emp}, Me.ListarModulosCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnListarModulosCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.ListarModulosCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent ListarModulosCustomizadoDaEmpresaCompleted(Me, New ListarModulosCustomizadoDaEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/BuscarMenusModuloEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Function BuscarMenusModuloEmpresa(ByVal Num_Emp As Integer) As System.Data.DataSet
            Dim results() As Object = Me.Invoke("BuscarMenusModuloEmpresa", New Object() {Num_Emp})
            Return CType(results(0),System.Data.DataSet)
        End Function
        
        '''<remarks/>
        Public Overloads Sub BuscarMenusModuloEmpresaAsync(ByVal Num_Emp As Integer)
            Me.BuscarMenusModuloEmpresaAsync(Num_Emp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub BuscarMenusModuloEmpresaAsync(ByVal Num_Emp As Integer, ByVal userState As Object)
            If (Me.BuscarMenusModuloEmpresaOperationCompleted Is Nothing) Then
                Me.BuscarMenusModuloEmpresaOperationCompleted = AddressOf Me.OnBuscarMenusModuloEmpresaOperationCompleted
            End If
            Me.InvokeAsync("BuscarMenusModuloEmpresa", New Object() {Num_Emp}, Me.BuscarMenusModuloEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnBuscarMenusModuloEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.BuscarMenusModuloEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent BuscarMenusModuloEmpresaCompleted(Me, New BuscarMenusModuloEmpresaCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/InserirModuloCustomizadoDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InserirModuloCustomizadoDaEmpresa(ByVal objInfo As _ItemMenuModuloEmpresaInfo)
            Me.Invoke("InserirModuloCustomizadoDaEmpresa", New Object() {objInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirModuloCustomizadoDaEmpresaAsync(ByVal objInfo As _ItemMenuModuloEmpresaInfo)
            Me.InserirModuloCustomizadoDaEmpresaAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirModuloCustomizadoDaEmpresaAsync(ByVal objInfo As _ItemMenuModuloEmpresaInfo, ByVal userState As Object)
            If (Me.InserirModuloCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.InserirModuloCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnInserirModuloCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("InserirModuloCustomizadoDaEmpresa", New Object() {objInfo}, Me.InserirModuloCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirModuloCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirModuloCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirModuloCustomizadoDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/InserirPermissoesModuloCustomizadoDaEm"& _ 
            "presa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub InserirPermissoesModuloCustomizadoDaEmpresa(ByVal listaInfo() As _ItemMenuModuloEmpresaInfo)
            Me.Invoke("InserirPermissoesModuloCustomizadoDaEmpresa", New Object() {listaInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirPermissoesModuloCustomizadoDaEmpresaAsync(ByVal listaInfo() As _ItemMenuModuloEmpresaInfo)
            Me.InserirPermissoesModuloCustomizadoDaEmpresaAsync(listaInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub InserirPermissoesModuloCustomizadoDaEmpresaAsync(ByVal listaInfo() As _ItemMenuModuloEmpresaInfo, ByVal userState As Object)
            If (Me.InserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.InserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnInserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("InserirPermissoesModuloCustomizadoDaEmpresa", New Object() {listaInfo}, Me.InserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnInserirPermissoesModuloCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.InserirPermissoesModuloCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent InserirPermissoesModuloCustomizadoDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/AlterarModuloCustomizadoDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub AlterarModuloCustomizadoDaEmpresa(ByVal objInfo As _ItemMenuModuloEmpresaInfo)
            Me.Invoke("AlterarModuloCustomizadoDaEmpresa", New Object() {objInfo})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarModuloCustomizadoDaEmpresaAsync(ByVal objInfo As _ItemMenuModuloEmpresaInfo)
            Me.AlterarModuloCustomizadoDaEmpresaAsync(objInfo, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub AlterarModuloCustomizadoDaEmpresaAsync(ByVal objInfo As _ItemMenuModuloEmpresaInfo, ByVal userState As Object)
            If (Me.AlterarModuloCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.AlterarModuloCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnAlterarModuloCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("AlterarModuloCustomizadoDaEmpresa", New Object() {objInfo}, Me.AlterarModuloCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnAlterarModuloCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.AlterarModuloCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent AlterarModuloCustomizadoDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DeletarModuloCustomizadoDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeletarModuloCustomizadoDaEmpresa(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte, ByVal NomeMenu_ItemMnuModEmp As String, ByVal NomeMenuPai_ItemMnuModEmp As String)
            Me.Invoke("DeletarModuloCustomizadoDaEmpresa", New Object() {NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp, NomeMenu_ItemMnuModEmp, NomeMenuPai_ItemMnuModEmp})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarModuloCustomizadoDaEmpresaAsync(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte, ByVal NomeMenu_ItemMnuModEmp As String, ByVal NomeMenuPai_ItemMnuModEmp As String)
            Me.DeletarModuloCustomizadoDaEmpresaAsync(NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp, NomeMenu_ItemMnuModEmp, NomeMenuPai_ItemMnuModEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletarModuloCustomizadoDaEmpresaAsync(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte, ByVal NomeMenu_ItemMnuModEmp As String, ByVal NomeMenuPai_ItemMnuModEmp As String, ByVal userState As Object)
            If (Me.DeletarModuloCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.DeletarModuloCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnDeletarModuloCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("DeletarModuloCustomizadoDaEmpresa", New Object() {NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp, NomeMenu_ItemMnuModEmp, NomeMenuPai_ItemMnuModEmp}, Me.DeletarModuloCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletarModuloCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletarModuloCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletarModuloCustomizadoDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        <System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/SuporteNET_WS/WsEmpresa/DeletaTodosModuloCustomizadoDaEmpresa", RequestNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", ResponseNamespace:="http://tempuri.org/SuporteNET_WS/WsEmpresa", Use:=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle:=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)>  _
        Public Sub DeletaTodosModuloCustomizadoDaEmpresa(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte)
            Me.Invoke("DeletaTodosModuloCustomizadoDaEmpresa", New Object() {NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp})
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletaTodosModuloCustomizadoDaEmpresaAsync(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte)
            Me.DeletaTodosModuloCustomizadoDaEmpresaAsync(NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp, Nothing)
        End Sub
        
        '''<remarks/>
        Public Overloads Sub DeletaTodosModuloCustomizadoDaEmpresaAsync(ByVal NumEmp_ItemMnuModEmp As Integer, ByVal NumMod_ItemMnuModEmp As Byte, ByVal userState As Object)
            If (Me.DeletaTodosModuloCustomizadoDaEmpresaOperationCompleted Is Nothing) Then
                Me.DeletaTodosModuloCustomizadoDaEmpresaOperationCompleted = AddressOf Me.OnDeletaTodosModuloCustomizadoDaEmpresaOperationCompleted
            End If
            Me.InvokeAsync("DeletaTodosModuloCustomizadoDaEmpresa", New Object() {NumEmp_ItemMnuModEmp, NumMod_ItemMnuModEmp}, Me.DeletaTodosModuloCustomizadoDaEmpresaOperationCompleted, userState)
        End Sub
        
        Private Sub OnDeletaTodosModuloCustomizadoDaEmpresaOperationCompleted(ByVal arg As Object)
            If (Not (Me.DeletaTodosModuloCustomizadoDaEmpresaCompletedEvent) Is Nothing) Then
                Dim invokeArgs As System.Web.Services.Protocols.InvokeCompletedEventArgs = CType(arg,System.Web.Services.Protocols.InvokeCompletedEventArgs)
                RaiseEvent DeletaTodosModuloCustomizadoDaEmpresaCompleted(Me, New System.ComponentModel.AsyncCompletedEventArgs(invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState))
            End If
        End Sub
        
        '''<remarks/>
        Public Shadows Sub CancelAsync(ByVal userState As Object)
            MyBase.CancelAsync(userState)
        End Sub
        
        Private Function IsLocalFileSystemWebService(ByVal url As String) As Boolean
            If ((url Is Nothing)  _
                        OrElse (url Is String.Empty)) Then
                Return false
            End If
            Dim wsUri As System.Uri = New System.Uri(url)
            If ((wsUri.Port >= 1024)  _
                        AndAlso (String.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) = 0)) Then
                Return true
            End If
            Return false
        End Function
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _EmpresaInfo
        
        Private num_empField As Integer
        
        Private descr_empField As String
        
        Private cpf_empField As String
        
        Private ender_empField As String
        
        Private setor_empField As String
        
        Private cidade_empField As String
        
        Private uf_empField As String
        
        Private cep_empField As String
        
        Private referEnd_empField As String
        
        Private datacad_empField As Date
        
        Private status_empField As Byte
        
        Private email_empField As String
        
        Private endWWW_empField As String
        
        Private atInat_empField As Byte
        
        Private dataAlt_empField As Date
        
        Private nomeFant_empField As String
        
        Private anexos_empField As Byte
        
        Private inscrMunic_empField As String
        
        Private inscrEst_empField As String
        
        Private estacoes_empField As Integer
        
        Private obs_empField As String
        
        Private usrCad_empField As String
        
        Private usrAlt_empField As String
        
        Private contato_empField As String
        
        Private qtdeHora_empField As Integer
        
        Private vlrHora_empField As Decimal
        
        Private dataUltAtualizacao_empField As Date
        
        Private clienteVinculado_empField As Boolean
        
        Private vlrHoraFac_empField As Decimal
        
        Private vlrHoraFacExc_empField As Decimal
        
        Private tipoCobranca_empField As Boolean
        
        Private dataContrato_empField As Date
        
        Private estacoesUso_empField As Integer
        
        Private dataAltEstUso_empField As Date
        
        Private usrResp_empField As String
        
        Private vlrHoraContrato_empField As Decimal
        
        Private qtdeHoraContrato_empField As Integer
        
        Private indiceReajuste_empField As String
        
        Private distanciaSede_empField As Decimal
        
        Private dataCancelamento_empField As Date
        
        Private permitirLicExcedentes_empField As Boolean
        
        '''<remarks/>
        Public Property Num_emp() As Integer
            Get
                Return Me.num_empField
            End Get
            Set
                Me.num_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Descr_emp() As String
            Get
                Return Me.descr_empField
            End Get
            Set
                Me.descr_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cpf_emp() As String
            Get
                Return Me.cpf_empField
            End Get
            Set
                Me.cpf_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ender_emp() As String
            Get
                Return Me.ender_empField
            End Get
            Set
                Me.ender_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Setor_emp() As String
            Get
                Return Me.setor_empField
            End Get
            Set
                Me.setor_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cidade_emp() As String
            Get
                Return Me.cidade_empField
            End Get
            Set
                Me.cidade_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Uf_emp() As String
            Get
                Return Me.uf_empField
            End Get
            Set
                Me.uf_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Cep_emp() As String
            Get
                Return Me.cep_empField
            End Get
            Set
                Me.cep_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ReferEnd_emp() As String
            Get
                Return Me.referEnd_empField
            End Get
            Set
                Me.referEnd_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Datacad_emp() As Date
            Get
                Return Me.datacad_empField
            End Get
            Set
                Me.datacad_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Status_emp() As Byte
            Get
                Return Me.status_empField
            End Get
            Set
                Me.status_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Email_emp() As String
            Get
                Return Me.email_empField
            End Get
            Set
                Me.email_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EndWWW_emp() As String
            Get
                Return Me.endWWW_empField
            End Get
            Set
                Me.endWWW_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AtInat_emp() As Byte
            Get
                Return Me.atInat_empField
            End Get
            Set
                Me.atInat_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataAlt_emp() As Date
            Get
                Return Me.dataAlt_empField
            End Get
            Set
                Me.dataAlt_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeFant_emp() As String
            Get
                Return Me.nomeFant_empField
            End Get
            Set
                Me.nomeFant_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Anexos_emp() As Byte
            Get
                Return Me.anexos_empField
            End Get
            Set
                Me.anexos_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InscrMunic_emp() As String
            Get
                Return Me.inscrMunic_empField
            End Get
            Set
                Me.inscrMunic_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property InscrEst_emp() As String
            Get
                Return Me.inscrEst_empField
            End Get
            Set
                Me.inscrEst_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Estacoes_emp() As Integer
            Get
                Return Me.estacoes_empField
            End Get
            Set
                Me.estacoes_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Obs_emp() As String
            Get
                Return Me.obs_empField
            End Get
            Set
                Me.obs_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_emp() As String
            Get
                Return Me.usrCad_empField
            End Get
            Set
                Me.usrCad_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrAlt_emp() As String
            Get
                Return Me.usrAlt_empField
            End Get
            Set
                Me.usrAlt_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Contato_emp() As String
            Get
                Return Me.contato_empField
            End Get
            Set
                Me.contato_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtdeHora_emp() As Integer
            Get
                Return Me.qtdeHora_empField
            End Get
            Set
                Me.qtdeHora_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VlrHora_emp() As Decimal
            Get
                Return Me.vlrHora_empField
            End Get
            Set
                Me.vlrHora_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataUltAtualizacao_emp() As Date
            Get
                Return Me.dataUltAtualizacao_empField
            End Get
            Set
                Me.dataUltAtualizacao_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ClienteVinculado_emp() As Boolean
            Get
                Return Me.clienteVinculado_empField
            End Get
            Set
                Me.clienteVinculado_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VlrHoraFac_emp() As Decimal
            Get
                Return Me.vlrHoraFac_empField
            End Get
            Set
                Me.vlrHoraFac_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VlrHoraFacExc_emp() As Decimal
            Get
                Return Me.vlrHoraFacExc_empField
            End Get
            Set
                Me.vlrHoraFacExc_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property TipoCobranca_emp() As Boolean
            Get
                Return Me.tipoCobranca_empField
            End Get
            Set
                Me.tipoCobranca_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataContrato_emp() As Date
            Get
                Return Me.dataContrato_empField
            End Get
            Set
                Me.dataContrato_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EstacoesUso_emp() As Integer
            Get
                Return Me.estacoesUso_empField
            End Get
            Set
                Me.estacoesUso_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataAltEstUso_emp() As Date
            Get
                Return Me.dataAltEstUso_empField
            End Get
            Set
                Me.dataAltEstUso_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrResp_emp() As String
            Get
                Return Me.usrResp_empField
            End Get
            Set
                Me.usrResp_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property VlrHoraContrato_emp() As Decimal
            Get
                Return Me.vlrHoraContrato_empField
            End Get
            Set
                Me.vlrHoraContrato_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtdeHoraContrato_emp() As Integer
            Get
                Return Me.qtdeHoraContrato_empField
            End Get
            Set
                Me.qtdeHoraContrato_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property IndiceReajuste_emp() As String
            Get
                Return Me.indiceReajuste_empField
            End Get
            Set
                Me.indiceReajuste_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DistanciaSede_emp() As Decimal
            Get
                Return Me.distanciaSede_empField
            End Get
            Set
                Me.distanciaSede_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCancelamento_emp() As Date
            Get
                Return Me.dataCancelamento_empField
            End Get
            Set
                Me.dataCancelamento_empField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property PermitirLicExcedentes_emp() As Boolean
            Get
                Return Me.permitirLicExcedentes_empField
            End Get
            Set
                Me.permitirLicExcedentes_empField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _ItemMenuModuloEmpresaInfo
        
        Private numEmp_ItemMnuModEmpField As Integer
        
        Private numMod_ItemMnuModEmpField As Byte
        
        Private nomeMenuPai_ItemMnuModEmpField As String
        
        Private nomeMenu_ItemMnuModEmpField As String
        
        Private usrCad_ItemMnuModEmpField As String
        
        Private dataCad_ItemMnuModEmpField As Date
        
        '''<remarks/>
        Public Property NumEmp_ItemMnuModEmp() As Integer
            Get
                Return Me.numEmp_ItemMnuModEmpField
            End Get
            Set
                Me.numEmp_ItemMnuModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumMod_ItemMnuModEmp() As Byte
            Get
                Return Me.numMod_ItemMnuModEmpField
            End Get
            Set
                Me.numMod_ItemMnuModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeMenuPai_ItemMnuModEmp() As String
            Get
                Return Me.nomeMenuPai_ItemMnuModEmpField
            End Get
            Set
                Me.nomeMenuPai_ItemMnuModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NomeMenu_ItemMnuModEmp() As String
            Get
                Return Me.nomeMenu_ItemMnuModEmpField
            End Get
            Set
                Me.nomeMenu_ItemMnuModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_ItemMnuModEmp() As String
            Get
                Return Me.usrCad_ItemMnuModEmpField
            End Get
            Set
                Me.usrCad_ItemMnuModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCad_ItemMnuModEmp() As Date
            Get
                Return Me.dataCad_ItemMnuModEmpField
            End Get
            Set
                Me.dataCad_ItemMnuModEmpField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _ConfPortalUAUInfo
        
        Private numEmp_PWebField As Integer
        
        Private uRLWS_PWebField As String
        
        Private emailContato_PWebField As String
        
        Private empresaUAU_PWebField As Short
        
        Private obraUAU_PWebField As String
        
        Private usrCad_PWebField As String
        
        Private dataCad_PwebField As Date
        
        Private dataAlt_PwebField As Date
        
        Private usrAlt_PWebField As String
        
        Private atInat_PWebField As Byte
        
        Private descrPortalUAU_PWebField As String
        
        Private hTML_PWebField As String
        
        Private uRLPaginaCentro_PWebField As String
        
        Private numHospUauWeb_PWebField As Integer
        
        '''<remarks/>
        Public Property NumEmp_PWeb() As Integer
            Get
                Return Me.numEmp_PWebField
            End Get
            Set
                Me.numEmp_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property URLWS_PWeb() As String
            Get
                Return Me.uRLWS_PWebField
            End Get
            Set
                Me.uRLWS_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmailContato_PWeb() As String
            Get
                Return Me.emailContato_PWebField
            End Get
            Set
                Me.emailContato_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property EmpresaUAU_PWeb() As Short
            Get
                Return Me.empresaUAU_PWebField
            End Get
            Set
                Me.empresaUAU_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property ObraUAU_PWeb() As String
            Get
                Return Me.obraUAU_PWebField
            End Get
            Set
                Me.obraUAU_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_PWeb() As String
            Get
                Return Me.usrCad_PWebField
            End Get
            Set
                Me.usrCad_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCad_Pweb() As Date
            Get
                Return Me.dataCad_PwebField
            End Get
            Set
                Me.dataCad_PwebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataAlt_Pweb() As Date
            Get
                Return Me.dataAlt_PwebField
            End Get
            Set
                Me.dataAlt_PwebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrAlt_PWeb() As String
            Get
                Return Me.usrAlt_PWebField
            End Get
            Set
                Me.usrAlt_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property AtInat_PWeb() As Byte
            Get
                Return Me.atInat_PWebField
            End Get
            Set
                Me.atInat_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DescrPortalUAU_PWeb() As String
            Get
                Return Me.descrPortalUAU_PWebField
            End Get
            Set
                Me.descrPortalUAU_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property HTML_PWeb() As String
            Get
                Return Me.hTML_PWebField
            End Get
            Set
                Me.hTML_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property URLPaginaCentro_PWeb() As String
            Get
                Return Me.uRLPaginaCentro_PWebField
            End Get
            Set
                Me.uRLPaginaCentro_PWebField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumHospUauWeb_PWeb() As Integer
            Get
                Return Me.numHospUauWeb_PWebField
            End Get
            Set
                Me.numHospUauWeb_PWebField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _ModuloEmpresaInfo
        
        Private numEmp_ModEmpField As Integer
        
        Private numMod_ModEmpField As Byte
        
        Private dataCad_ModEmpField As Date
        
        Private usrCad_ModEmpField As String
        
        Private dataExpiracao_ModEmpField As Date
        
        Private qtdeCadastro_ModEmpField As Short
        
        '''<remarks/>
        Public Property NumEmp_ModEmp() As Integer
            Get
                Return Me.numEmp_ModEmpField
            End Get
            Set
                Me.numEmp_ModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumMod_ModEmp() As Byte
            Get
                Return Me.numMod_ModEmpField
            End Get
            Set
                Me.numMod_ModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCad_ModEmp() As Date
            Get
                Return Me.dataCad_ModEmpField
            End Get
            Set
                Me.dataCad_ModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_ModEmp() As String
            Get
                Return Me.usrCad_ModEmpField
            End Get
            Set
                Me.usrCad_ModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataExpiracao_ModEmp() As Date
            Get
                Return Me.dataExpiracao_ModEmpField
            End Get
            Set
                Me.dataExpiracao_ModEmpField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property QtdeCadastro_ModEmp() As Short
            Get
                Return Me.qtdeCadastro_ModEmpField
            End Get
            Set
                Me.qtdeCadastro_ModEmpField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _ConexaoEmpInfo
        
        Private num_conField As Integer
        
        Private numConex_conField As String
        
        Private tipo_conField As String
        
        Private usrLogin_conField As String
        
        Private senha_conField As String
        
        Private dataCad_conField As Date
        
        Private usrCad_conField As String
        
        Private obs_conField As String
        
        Private numEmp_conField As Integer
        
        Private usrCon_conField As String
        
        Private dataCon_conField As Date
        
        '''<remarks/>
        Public Property Num_con() As Integer
            Get
                Return Me.num_conField
            End Get
            Set
                Me.num_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumConex_con() As String
            Get
                Return Me.numConex_conField
            End Get
            Set
                Me.numConex_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tipo_con() As String
            Get
                Return Me.tipo_conField
            End Get
            Set
                Me.tipo_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrLogin_con() As String
            Get
                Return Me.usrLogin_conField
            End Get
            Set
                Me.usrLogin_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Senha_con() As String
            Get
                Return Me.senha_conField
            End Get
            Set
                Me.senha_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCad_con() As Date
            Get
                Return Me.dataCad_conField
            End Get
            Set
                Me.dataCad_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_con() As String
            Get
                Return Me.usrCad_conField
            End Get
            Set
                Me.usrCad_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Obs_con() As String
            Get
                Return Me.obs_conField
            End Get
            Set
                Me.obs_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumEmp_con() As Integer
            Get
                Return Me.numEmp_conField
            End Get
            Set
                Me.numEmp_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCon_con() As String
            Get
                Return Me.usrCon_conField
            End Get
            Set
                Me.usrCon_conField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCon_con() As Date
            Get
                Return Me.dataCon_conField
            End Get
            Set
                Me.dataCon_conField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.0.30319.34234"),  _
     System.SerializableAttribute(),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code"),  _
     System.Xml.Serialization.XmlTypeAttribute([Namespace]:="http://tempuri.org/SuporteNET_WS/WsEmpresa")>  _
    Partial Public Class _TelefoneEmpInfo
        
        Private num_telField As Integer
        
        Private numEmp_telField As Integer
        
        Private fone_telField As String
        
        Private dDD_telField As String
        
        Private ramal_telField As String
        
        Private tipo_telField As Byte
        
        Private dataCad_telField As Date
        
        Private usrCad_telField As String
        
        Private obs_telField As String
        
        '''<remarks/>
        Public Property Num_tel() As Integer
            Get
                Return Me.num_telField
            End Get
            Set
                Me.num_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property NumEmp_tel() As Integer
            Get
                Return Me.numEmp_telField
            End Get
            Set
                Me.numEmp_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Fone_tel() As String
            Get
                Return Me.fone_telField
            End Get
            Set
                Me.fone_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DDD_tel() As String
            Get
                Return Me.dDD_telField
            End Get
            Set
                Me.dDD_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Ramal_tel() As String
            Get
                Return Me.ramal_telField
            End Get
            Set
                Me.ramal_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Tipo_tel() As Byte
            Get
                Return Me.tipo_telField
            End Get
            Set
                Me.tipo_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property DataCad_tel() As Date
            Get
                Return Me.dataCad_telField
            End Get
            Set
                Me.dataCad_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property UsrCad_tel() As String
            Get
                Return Me.usrCad_telField
            End Get
            Set
                Me.usrCad_telField = value
            End Set
        End Property
        
        '''<remarks/>
        Public Property Obs_tel() As String
            Get
                Return Me.obs_telField
            End Get
            Set
                Me.obs_telField = value
            End Set
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarDescricaoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDescricaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDescricaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarPelaChaveCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPelaChaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPelaChaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub EmpresaCanceladaCompletedEventHandler(ByVal sender As Object, ByVal e As EmpresaCanceladaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class EmpresaCanceladaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarComPermissaoCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarComPermissaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarComPermissaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarPorTarefaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarPorTarefaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarPorTarefaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirCompletedEventHandler(ByVal sender As Object, ByVal e As InserirCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InserirCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarResponsavelDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarHorasCronogramaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletarCompletedEventHandler(ByVal sender As Object, ByVal e As DeletarCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletarCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ListarTelefoneCompletedEventHandler(ByVal sender As Object, ByVal e As ListarTelefoneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarTelefoneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ListarTelefonePelaChaveCompletedEventHandler(ByVal sender As Object, ByVal e As ListarTelefonePelaChaveCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarTelefonePelaChaveCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirTelefoneCompletedEventHandler(ByVal sender As Object, ByVal e As InserirTelefoneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InserirTelefoneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Object
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Object)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarTelefoneCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletarTelefoneCompletedEventHandler(ByVal sender As Object, ByVal e As DeletarTelefoneCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletarTelefoneCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ListarConexaoCompletedEventHandler(ByVal sender As Object, ByVal e As ListarConexaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarConexaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirConexaoCompletedEventHandler(ByVal sender As Object, ByVal e As InserirConexaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class InserirConexaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Integer
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Integer)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarConexaoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletarConexaoCompletedEventHandler(ByVal sender As Object, ByVal e As DeletarConexaoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletarConexaoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConectarUsuarioNaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DesconectarUsuarioDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub LiberarConexoesDasEmpresasAposUmDiaDeUsoCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ListarModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ListarModuloEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarModuloEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletarModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As DeletarModuloEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class DeletarModuloEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarHistoricoModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarHistoricoModuloEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarHistoricoModuloEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarModuloEmpresaPorModuloEEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarModuloEmpresaPorModuloEEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarModuloEmpresaPorModuloEEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As _ModuloEmpresaInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),_ModuloEmpresaInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub CarregarConfPortalEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As CarregarConfPortalEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class CarregarConfPortalEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As _ConfPortalUAUInfo
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),_ConfPortalUAUInfo)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultarDadosConfPortalUauPorTokenCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultarDadosConfPortalUauPorTokenCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultarDadosConfPortalUauPorTokenCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub GeraTokenEmpresaPorCodigoCompletedEventHandler(ByVal sender As Object, ByVal e As GeraTokenEmpresaPorCodigoCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class GeraTokenEmpresaPorCodigoCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As String
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),String)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub HabilitarPortalEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DesabilitarPortalEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarConfPortalSupNetCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ExisteConfiguracaoUauWebComHospedagemCompletedEventHandler(ByVal sender As Object, ByVal e As ExisteConfiguracaoUauWebComHospedagemCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ExisteConfiguracaoUauWebComHospedagemCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As Boolean
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),Boolean)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ConsultaLogDiferencaLicencaPorEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ConsultaLogDiferencaLicencaPorEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ConsultaLogDiferencaLicencaPorEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub ListarModulosCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As ListarModulosCustomizadoDaEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class ListarModulosCustomizadoDaEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub BuscarMenusModuloEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As BuscarMenusModuloEmpresaCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408"),  _
     System.Diagnostics.DebuggerStepThroughAttribute(),  _
     System.ComponentModel.DesignerCategoryAttribute("code")>  _
    Partial Public Class BuscarMenusModuloEmpresaCompletedEventArgs
        Inherits System.ComponentModel.AsyncCompletedEventArgs
        
        Private results() As Object
        
        Friend Sub New(ByVal results() As Object, ByVal exception As System.Exception, ByVal cancelled As Boolean, ByVal userState As Object)
            MyBase.New(exception, cancelled, userState)
            Me.results = results
        End Sub
        
        '''<remarks/>
        Public ReadOnly Property Result() As System.Data.DataSet
            Get
                Me.RaiseExceptionIfNecessary
                Return CType(Me.results(0),System.Data.DataSet)
            End Get
        End Property
    End Class
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirModuloCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub InserirPermissoesModuloCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub AlterarModuloCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletarModuloCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
    
    '''<remarks/>
    <System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.0.30319.18408")>  _
    Public Delegate Sub DeletaTodosModuloCustomizadoDaEmpresaCompletedEventHandler(ByVal sender As Object, ByVal e As System.ComponentModel.AsyncCompletedEventArgs)
End Namespace
